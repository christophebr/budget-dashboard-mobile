import pandas as pd

def verify_transactions():
    """V√©rifie que les donn√©es extraites sont correctes"""
    try:
        df = pd.read_csv("transactions_complete.csv")
        df['date'] = pd.to_datetime(df['date'])
        
        print("üîç V√©rification des donn√©es extraites")
        print("=" * 50)
        
        # V√©rifier qu'il n'y a pas de soldes dans les transactions
        solde_transactions = df[df['description'].str.contains('solde', case=False, na=False)]
        if len(solde_transactions) > 0:
            print("‚ùå PROBL√àME : Des soldes sont encore pr√©sents dans les transactions :")
            print(solde_transactions[['date', 'description', 'amount']])
        else:
            print("‚úÖ Aucun solde trouv√© dans les transactions (correct)")
        
        # Statistiques
        print(f"\nüìä Statistiques :")
        print(f"Total transactions : {len(df)}")
        print(f"P√©riode : {df['date'].min().strftime('%d/%m/%Y')} - {df['date'].max().strftime('%d/%m/%Y')}")
        
        # Revenus et d√©penses
        revenus = df[df['amount'] > 0]['amount'].sum()
        depenses = df[df['amount'] < 0]['amount'].sum()
        solde_net = df['amount'].sum()
        
        print(f"Total revenus : {revenus:,.2f} ‚Ç¨")
        print(f"Total d√©penses : {depenses:,.2f} ‚Ç¨")
        print(f"Solde net : {solde_net:,.2f} ‚Ç¨")
        
        # V√©rifier les types de transactions
        print(f"\nüè∑Ô∏è Types de transactions :")
        types = df['description'].str.extract(r'^([A-Z\s]+)')[0].value_counts()
        print(types.head(10))
        
        # V√©rifier les montants n√©gatifs (d√©penses)
        print(f"\nüí∏ Top 10 des d√©penses :")
        top_depenses = df[df['amount'] < 0].nlargest(10, 'amount')
        for idx, row in top_depenses.iterrows():
            print(f"  {row['date'].strftime('%d/%m/%Y')} : {row['description'][:50]}... - {row['amount']:,.2f} ‚Ç¨")
        
        # V√©rifier les montants positifs (revenus)
        print(f"\nüí∞ Top 10 des revenus :")
        top_revenus = df[df['amount'] > 0].nlargest(10, 'amount')
        for idx, row in top_revenus.iterrows():
            print(f"  {row['date'].strftime('%d/%m/%Y')} : {row['description'][:50]}... + {row['amount']:,.2f} ‚Ç¨")
        
        print(f"\n‚úÖ V√©rification termin√©e !")
        
    except FileNotFoundError:
        print("‚ùå Fichier transactions_complete.csv non trouv√©")
    except Exception as e:
        print(f"‚ùå Erreur lors de la v√©rification : {e}")

if __name__ == "__main__":
    verify_transactions()
